import{_ as e,c as t,o as n,ag as i}from"./chunks/framework.S-Qvb3wi.js";const m=JSON.parse('{"title":"Input and Camera","description":"","frontmatter":{},"headers":[],"relativePath":"reference/input-and-camera.md","filePath":"reference/input-and-camera.md","lastUpdated":null}'),r={name:"reference/input-and-camera.md"};function o(l,a,p,c,s,d){return n(),t("div",null,a[0]||(a[0]=[i('<h1 id="input-and-camera" tabindex="-1">Input and Camera <a class="header-anchor" href="#input-and-camera" aria-label="Permalink to &quot;Input and Camera&quot;">​</a></h1><p>Input (Enhanced Input)</p><ul><li>Actions: Move (Axis2D), Look (Axis2D), Jump (Action), Interact (Action), Sprint (Action)</li><li>Mapping Context: <code>IMC_Player</code> (priority &gt; 0)</li><li>Tips: Avoid reading input in Tick; bind to actions; decouple inputs from gameplay logic via functions on character.</li></ul><p>Camera</p><ul><li>SpringArm + CameraComponent attached to character; disable pawn control rotation for platformer camera.</li><li>Follow/Cam Lag: Start with 12.0 (pos), 10.0 (rot); adjust for responsiveness vs. smoothness.</li><li>Collision: Enable camera collision on SpringArm to avoid clipping.</li><li>FOV: 90 (80–100 typical); reduce for tighter spaces.</li></ul><p>Edge cases</p><ul><li>Controller disconnected: Ensure inputs fail gracefully.</li><li>UI focus: Pause input mapping or adjust priority.</li></ul>',7)]))}const _=e(r,[["render",o]]);export{m as __pageData,_ as default};
